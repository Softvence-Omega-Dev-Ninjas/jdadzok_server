model Post {
  id            String         @id @default(uuid())
  authorId      String
  text          String
  mediaUrl      String?
  mediaType     MediaType      @default(TEXT)
  visibility    PostVisibility @default(PUBLIC)
  metadataId    String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  communitiesId String?
  ngoId         String?
  postTagUsers  PostTagUser[]
  comments      Comment[]
  likes         Like[]
  author        User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  Communities   Communities?   @relation(fields: [communitiesId], references: [id], onDelete: Cascade)
  metadata      PostMetadata?  @relation(fields: [metadataId], references: [id], onDelete: Cascade)
  Ngo           Ngo?           @relation(fields: [ngoId], references: [id], onDelete: Cascade)
  shares        Share[]

  @@map("posts")
}
