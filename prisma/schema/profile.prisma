model Profile {
  id String @id @default(uuid())
  
  // Link to user
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Profile information
  name           String
  username       String  @unique
  title          String? // Professional title
  bio            String? @db.Text // User bio/description
  avatarUrl      String? // Profile picture URL
  coverUrl       String? // Cover photo URL
  location       String? // User's location
  
  // Social metrics (denormalized for performance)
  followersCount Int @default(0)
  followingCount Int @default(0)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("profiles")
  @@index([username])
  @@index([name])
}