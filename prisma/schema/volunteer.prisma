model VolunteerProject {
  id            String                 @id @default(uuid())
  createdById   String
  title         String
  description   String
  location      String?
  remoteAllowed Boolean                @default(false)
  status        VolunteerStatus        @default(OPEN)
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  endorsements  Endorsement[]
  applications  VolunteerApplication[]
  createdBy     User                   @relation(fields: [createdById], references: [id])

  @@map("volunteer_projects")
}

model VolunteerApplication {
  id        String            @id @default(uuid())
  userId    String
  projectId String
  status    ApplicationStatus @default(PENDING)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  project   VolunteerProject  @relation(fields: [projectId], references: [id])
  user      User              @relation(fields: [userId], references: [id])

  @@map("volunteer_applications")
}

model Endorsement {
  id         String            @id @default(uuid())
  fromUserId String
  toUserId   String
  message    String
  projectId  String?
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  fromUser   User              @relation("endorser", fields: [fromUserId], references: [id])
  project    VolunteerProject? @relation(fields: [projectId], references: [id])
  toUser     User              @relation("endorsee", fields: [toUserId], references: [id])

  @@map("endorsements")
}
