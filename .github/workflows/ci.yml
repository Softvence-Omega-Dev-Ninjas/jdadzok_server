name: CI Pipeline

on:
    push:
        branches: ["**"]
    pull_request:
        branches: ["**"]

jobs:
    setup:
        uses: ./.github/workflows/setup.yaml

    lint-test:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup and load environment
              uses: ./.github/actions/setup-and-load-env

            - name: 🧹 Run Lint
              run: pnpm ci:fix

            - name: ✅ Format Check
              run: pnpm format

            - name: 🔄 Generate Prisma Client
              run: pnpm prisma:generate

            - name: 🏗 Build Project
              run: pnpm build

            - name: 🧹 Clean up .env
              if: always()
              run: rm -f "${{ github.workspace }}/.env"

    build-and-push:
        needs: lint-test
        runs-on: ubuntu-latest
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup and load environment
              uses: ./.github/actions/setup-and-load-env

            - name: 📋 Verify environment variables
              uses: ./.github/actions/verify-env

            - name: Log in to Docker Hub 🔑
              uses: ./.github/actions/docker-login

            - name: Build Docker Image 🔨
              run: |
                  echo "Building Docker image: $IMAGE_TAG"
                  docker compose --profile prod build
                  if [ $? -eq 0 ]; then echo "✅ Docker image built successfully"; else echo "❌ Failed to build Docker image"; exit 1; fi

            - name: Push Docker Image 🚀
              run: |
                  echo "Pushing Docker image: $IMAGE_TAG"
                  docker compose --profile prod push
                  if [ $? -eq 0 ]; then echo "✅ Docker image $IMAGE_TAG pushed successfully!"; else echo "❌ Failed to push Docker image"; exit 1; fi
