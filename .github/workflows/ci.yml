name: CI Pipeline
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  # Setup environment in a reusable way
  setup:
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  lint-test:
    name: 🧪 CI - Lint, Build, Format, Prisma
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file

      - name: Load environment variables
        run: |
          if [ -f .env ]; then
            set -a  # automatically export all variables
            source .env
            set +a
            echo "✅ Environment variables loaded successfully"
          else
            echo "❌ .env file not found"
            exit 1
          fi

      - name: Verify environment
        run: |
          echo "Package name: $PACKAGE_NAME"
          echo "Package version: $PACKAGE_VERSION"
          echo "✅ Environment verification complete"

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 📦 Install dependencies
        run: npm install

      - name: 🧹 Run Lint
        run: npm run lint

      - name: ✅ Format Check
        run: npm run format

      - name: 🏗 Build Project
        run: npm run build

      - name: 🔄 Generate Prisma Client
        run: npm run prisma:generate

      - name: Clean up
        if: always()
        run: rm -f .env

  build-test:
    name: 🧪 Docker Image Build
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file

      - name: Load environment variables
        run: |
          if [ -f .env ]; then
            set -a  # automatically export all variables
            source .env
            set +a
            echo "✅ Environment variables loaded successfully"
          else
            echo "❌ .env file not found"
            exit 1
          fi

      - name: Build Docker Image
        run: |
          docker compose --profile prod build
          echo "✅ Docker image build with version v$PACKAGE_VERSION success 🤝!"

      - name: Clean up
        if: always()
        run: rm -f .env
