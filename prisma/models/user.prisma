// -----------------------------------
// USER & PROFILE
// -----------------------------------

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  passwordHash String?
  authProvider AuthProvider @default(EMAIL)
  role         Role         @default(USER)
  capLevel     CapLevel     @default(GREEN)

  profile Profile?
  About   About?

  followers Follow[] @relation("followers")
  following Follow[] @relation("following")
  orders    Order[]  @relation("orders")
  reports   Report[] @relation("reportsMade")

  subscriptionsCreated    Subscription[] @relation("creatorSubscriptions")
  subscriptionsSubscribed Subscription[] @relation("userSubscriptions")

  fromEndorsement Endorsement[] @relation("endorser")
  toEndorsement   Endorsement[] @relation("endorsee")

  posts            Post[]
  comments         Comment[]
  likes            Like[]
  shares           Share[]
  volunteerApps    VolunteerApplication[]
  products         Product[]
  messageRead      MessageRead[]
  message          Message[]
  chatParticipant  ChatParticipant[]
  chat             Chat[]
  payouts          Payout[]
  notifications    Notification[]
  bans             Ban[]
  adRevenueShare   AdRevenueShare[]
  volunteerProject VolunteerProject[]
  // TODO: need to be remove it
  taggedPosts      PostTagUser[]
  // a user choice based on that choice array we have to display their feed page
  Choice           Choice[]
  wishlist  Wishlist[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id String @id @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  name           String
  username       String  @unique
  title          String?
  bio            String?
  avatarUrl      String?
  coverUrl       String?
  location       String?
  followersCount Int     @default(0)
  followingCount Int     @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model About {
  id String @id @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  location    String?
  dateOfBirth DateTime?
  work        String?
  website     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("about")
}

// -----------------------------------
// FOLLOW RELATION
// -----------------------------------

model Follow {
  id String @id @default(uuid())

  followerId String
  follower   User   @relation("followers", fields: [followerId], references: [id])

  followingId String
  following   User   @relation("following", fields: [followingId], references: [id])

  createdAt DateTime @default(now())

  @@unique([followerId, followingId])
}
