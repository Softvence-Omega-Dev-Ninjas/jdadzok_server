name: CI Pipeline
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
jobs:
  setup-env:
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  lint-test:
    name: 🧪 CI - Lint, Build, Format, Prisma
    runs-on: ubuntu-latest
    needs: setup-env
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: ${{ github.workspace }}
      - name: Debug downloaded .env
        run: |
          echo "Current working directory: $(pwd)"
          ls -la "${{ github.workspace }}"
          if [ -f "${{ github.workspace }}/.env" ]; then
            echo ".env file found at ${{ github.workspace }}/.env (size: $(wc -c < "${{ github.workspace }}/.env") bytes)"
          else
            echo "Error: .env file not found after download"
            exit 1
          fi
      - name: Load .env to GITHUB_ENV
        run: |
          if [ ! -f "${{ github.workspace }}/.env" ]; then
            echo "Error: .env file not found at ${{ github.workspace }}/.env"
            exit 1
          fi
          while IFS='=' read -r key value; do
            if [[ ! "$key" =~ ^# && -n "$key" ]]; then
              echo "$key=$value" >> "$GITHUB_ENV"
            fi
          done < "${{ github.workspace }}/.env"
      - name: Echo package name and version
        run: |
          echo "Package name: $PACKAGE_NAME"
          echo "Package version: $PACKAGE_VERSION"
          echo "✅ Great, we can perfectly access our env"
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: 📦 Install dependencies
        run: npm install
      - name: 🧹 Run Lint
        run: npm run lint
      - name: ✅ Format Check
        run: npm run format
      - name: 🏗 Build Project
        run: npm run build
      - name: 🔄 Generate Prisma Client
        run: npm run prisma:generate
      - name: Clean up .env
        if: always()
        run: rm -f "${{ github.workspace }}/.env"

  build-test:
    name: 🧪 Docker Image Build
    runs-on: ubuntu-latest
    needs: setup-env
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: ${{ github.workspace }}
      - name: Debug downloaded .env
        run: |
          echo "Current working directory: $(pwd)"
          ls -la "${{ github.workspace }}"
          if [ -f "${{ github.workspace }}/.env" ]; then
            echo ".env file found at ${{ github.workspace }}/.env (size: $(wc -c < "${{ github.workspace }}/.env") bytes)"
          else
            echo "Error: .env file not found after download"
            exit 1
          fi
      - name: Load .env to GITHUB_ENV
        run: |
          if [ ! -f "${{ github.workspace }}/.env" ]; then
            echo "Error: .env file not found at ${{ github.workspace }}/.env"
            exit 1
          fi
          while IFS='=' read -r key value; do
            if [[ ! "$key" =~ ^# && -n "$key" ]]; then
              echo "$key=$value" >> "$GITHUB_ENV"
            fi
          done < "${{ github.workspace }}/.env"
      - name: Build Docker Image
        run: |
          docker compose --profile prod build
          echo "✅ Docker image build with version v${{ env.PACKAGE_VERSION }} success 🤝!"
      - name: Clean up .env
        if: always()
        run: rm -f "${{ github.workspace }}/.env"
