model SurveyTemplate {
  id          String  @id @default(uuid())
  title       String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  questions SurveyQuestions[]
  surveys   Survey[]
}

model Survey {
  id String @id @default(uuid())

  title       String
  description String?

  surveyType   SurveyType @default(EmployeeSatisfaction)
  status       SurveyStatus @default(DRAFT)
  publishTime  DateTime?
  showOnFeed   Boolean      @default(false)
  reminderTime DateTime?
  isForAll    Boolean      @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  template   SurveyTemplate? @relation(fields: [templateId], references: [id], onDelete: SetNull)
  templateId String?

  questions   SurveyQuestions[]
  teamSurveys TeamSurvey[]
  surveyUsers SurveyUser[]
  responses   SurveyResponse[]

  createdBy String
  user      User   @relation(fields: [createdBy], references: [id])
}

enum SurveyType {
  EmployeeSatisfaction
  EmployeeEngagement
  HealthAndSafety
  BenefitsSatisfaction
  WorkLifeBalance
  WorkEnvironment
  TeamCollaboration
  NewPolicyAwareness
}

enum SurveyStatus {
  DRAFT
  ACTIVE
  COMPLETED
}

model SurveyUser {
  id          String  @id @default(uuid())
  userId      String
  surveyId    String
  isResponded Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  survey Survey @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@unique([userId, surveyId])
}
