name: 🚀 CD Pipeline with Zero Downtime
on:
    push:
    workflow_run:
        workflows: ["CI Pipeline"]
        types:
            - completed
jobs:
    deploy:
        runs-on: ubuntu-latest
        # if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup and load environment
              uses: ./.github/actions/setup-and-load-env

            - name: 📋 Verify environment variables
              uses: ./.github/actions/verify-env

            - name: Setup SSH 🔐
              uses: ./.github/actions/setup-ssh

            - name: Copy Files to Server 📦
              run: |
                  echo "Creating directories..."
                  ssh deploy-server "mkdir -p ~/$PACKAGE_NAME/scripts"
                  echo "Copying files..."
                  scp docker-compose.yaml deploy-server:~/$PACKAGE_NAME/
                  scp .env deploy-server:~/$PACKAGE_NAME/
                  scp Dockerfile deploy-server:~/$PACKAGE_NAME/
                  scp -r scripts deploy-server:~/$PACKAGE_NAME/
                  echo "✅ Files copied successfully"

            - name: Fix permissions on server 🌋
              run: |
                  ssh deploy-server "chmod -R +x ~/$PACKAGE_NAME/scripts/*.sh"

            - name: Deploy Application 🚀
              run: |
                  ssh deploy-server "bash ~/$PACKAGE_NAME/scripts/deploy-remote.sh"

            - name: Verify Deployment ✅
              run: |
                  ssh deploy-server bash << 'VERIFY_EOF'
                    cd ~/${{ secrets.PACKAGE_NAME }}
                    echo "=== Running deployment status check ==="
                    ./scripts/deploy.sh status
                    echo "=== Testing endpoint directly ==="
                    if curl -f -s --connect-timeout 5 --max-time 10 "http://${{ secrets.VPS_HOST_IP }}:${{ secrets.PORT }}/" | grep -q '"status":"ok"'; then
                      echo "🎉 Endpoint health check passed! Service is responding with status: ok"
                    else
                      echo "❌ Endpoint health check failed!"
                      exit 1
                    fi
                    echo "Deployment verified successfully!"
                  VERIFY_EOF
            - name: Cleanup 🧹
              if: always()
              run: |
                  rm -rf ~/.ssh/deploy_key* ~/.ssh/config
                  rm -f .env
