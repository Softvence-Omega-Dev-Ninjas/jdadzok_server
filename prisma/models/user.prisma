model User {
  id                      String                 @id @default(uuid())
  email                   String                 @unique
  passwordHash            String?
  authProvider            AuthProvider           @default(EMAIL)
  role                    Role                   @default(USER)
  capLevel                CapLevel               @default(GREEN)
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  Choice                  Choice[]
  followers               Follow[]               @relation("followers")
  following               Follow[]               @relation("following")
  notifications           Notification[]
  products                Product[]
  Wishlist                Wishlist[]
  About                   About?
  adRevenueShare          AdRevenueShare[]
  bans                    Ban[]
  chatParticipant         ChatParticipant[]
  chat                    Chat[]
  comments                Comment[]
  fromEndorsement         Endorsement[]          @relation("endorser")
  toEndorsement           Endorsement[]          @relation("endorsee")
  likes                   Like[]
  messageRead             MessageRead[]
  message                 Message[]
  orders                  Order[]                @relation("orders")
  payouts                 Payout[]
  posts                   Post[]
  profile                 Profile?
  reports                 Report[]               @relation("reportsMade")
  shares                  Share[]
  subscriptionsCreated    Subscription[]         @relation("creatorSubscriptions")
  subscriptionsSubscribed Subscription[]         @relation("userSubscriptions")
  volunteerApps           VolunteerApplication[]
  volunteerProject        VolunteerProject[]

  @@map("users")
}

model Profile {
  id             String   @id @default(uuid())
  userId         String   @unique
  name           String
  username       String   @unique
  title          String?
  bio            String?
  avatarUrl      String?
  coverUrl       String?
  location       String?
  followersCount Int      @default(0)
  followingCount Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model About {
  id          String    @id @default(uuid())
  userId      String    @unique
  location    String?
  dateOfBirth DateTime?
  work        String?
  website     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])

  @@map("about")
}

model Follow {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  createdAt   DateTime @default(now())
  follower    User     @relation("followers", fields: [followerId], references: [id])
  following   User     @relation("following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}
