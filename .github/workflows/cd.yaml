name: Lint, Format, Build, Push & Deploy

on:
    push:
        branches: [main]
    pull_request:
        branches:
            - "**"

jobs:
    ci-check:
        name: Lint, Format, Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 24

            - name: Install dependencies
              run: npm install

            - name: Run Ci fix
              run: npm run ci:fix

            - name: Build Project
              run: npm run build

    build-and-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: ci-check
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and Push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.PACKAGE_NAME }}:latest

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: build-and-push
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Copy Compose File
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
                  source: "docker-compose.yaml"
                  target: "~/jdadzok_server"

            - name: Copy Caddy File
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
                  source: "Caddyfile"
                  target: "~/jdadzok_server"

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
                  script: |
                      cd ~/jdadzok_server
                      # Pull the latest images
                      docker compose --profile prod pull

                      # Stop and remove existing containers safely
                      docker compose --profile prod down --remove-orphans

                      # Start containers in detached mode
                      docker compose --profile prod up -d

                      # Prune unused Docker objects (optional, cleans disk)
                      docker system prune -f
