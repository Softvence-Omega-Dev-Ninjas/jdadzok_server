name: 🚀 Deploy NGINX HTTPS Reverse Proxy 🔐

on:
  workflow_run:
    workflows: ["🚀 CD Pipeline with Zero Downtime"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🧠 Extract the package name
        id: package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")

          echo "📦 PACKAGE_NAME: $PACKAGE_NAME"
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "✅ Outputs written to GITHUB_OUTPUT"

      - name: 🔐 Set up SSH
        run: |
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > deploy_key
          chmod 600 deploy_key
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: ⚙️ Prepare and update NGINX .env values on VPS
        run: |
          echo "🛠 Updating NGINX-related env vars on VPS"

          ssh -i deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "bash -s" <<EOF
            set -e

            cd ~/${{ steps.package.outputs.package_name }}

            touch .env

            update_var() {
              KEY=\$1
              VALUE=\$2
              if grep -qE "^\\\$KEY=" .env; then
                sed -i "s|^\\\$KEY=.*|\\\$KEY=\\\$VALUE|" .env
                echo "🔄 Updated: \$KEY"
              else
                echo "\$KEY=\$VALUE" >> .env
                echo "➕ Added: \$KEY"
              fi
            }

            update_var BASE_URL "${{ secrets.BASE_URL }}"
            update_var EMAIL "${{ secrets.EMAIL }}"
            update_var DOCKER_USERNAME "${{ secrets.DOCKER_USERNAME }}"

            echo "✅ .env updated on VPS"
          EOF

      - name: 🧪 Run NGINX Setup Script on VPS
        run: |
          echo "🚀 Running setup-nginx.sh on VPS"
          # copy the setup-nginx.sh file
          ls -a
          scp -i ~/.ssh/deploy_key scripts/setup-nginx.sh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/${{ steps.package.outputs.package_name }}/scripts/

          ls -a

          echo "Copy success now run the bash file"
          ssh -i ~/.ssh/deploy_key ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ~/${{ steps.package.outputs.package_name }}/scripts && chmod +x setup-nginx.sh && ./setup-nginx.sh"
