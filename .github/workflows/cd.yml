name: 🚀 CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build & Push Docker Image 🏗️
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout Code 📥
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using secrets stored in GitHub
      - name: Log in to Docker Hub 🔑
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Extract Package Name & Version 📦
        id: package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Create .env file 📄
        run: |
          echo "PACKAGE_VERSION=${{ env.package_version }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> .env
          echo "MAIL_PASS=${{ secrets.MAIL_PASS }}" >> .env
          echo "SUPER_ADMIN_EMAIL=${{ secrets.SUPER_ADMIN_EMAIL }}" >> .env
          echo "SUPER_ADMIN_PASS=${{ secrets.SUPER_ADMIN_PASS }}" >> .env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
          echo "TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}" >> .env

      - name: Log .env ☺️
        run: ls -a

      - name: Build Docker Image 🔨
        run: docker compose --profile prod build

      # Step 6: Push Docker Image to Docker Hub
      - name: Push Docker Image 🚀
        run: |
          docker compose --profile prod push
          echo "✅ Docker image with version v${{ env.package_version }} pushed!"

      - name: Clean up .env 🧹
        if: always()
        run: rm -f .env

  # deploy:
  #   name: Deploy to VPS 🌐
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     # Step 1: Checkout Repo
  #     - name: Checkout Repo 📥
  #       uses: actions/checkout@v4

  #     # Step 2: Deploy to VPS via SSH 🛠️
  #     - name: Deploy to VPS via SSH 🛠️
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: root
  #         password: ${{ secrets.VPS_PASSWORD }}
  #         script: |
  #           docker compose down --remove-orphans
  #           docker compose rm -f
  #           docker compose pull
  #           docker compose up -d
  #           docker image prune -f
